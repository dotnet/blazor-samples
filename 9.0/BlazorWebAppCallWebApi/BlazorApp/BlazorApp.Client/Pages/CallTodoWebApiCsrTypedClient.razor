@page "/call-todo-web-api-csr-typed-client"
@rendermode InteractiveWebAssembly
@using BlazorApp.Client.Models
@implements IDisposable
@inject PersistentComponentState ApplicationState
@inject TodoHttpClient Http

<PageTitle>Call Todo web API (CSR, Typed Client)</PageTitle>

<h1>Call Todo web API Example (CSR, Typed Client)</h1>

@if (todoItems == null)
{
    <p>No Todo Items found.</p>
}
else
{
    <ul>
        @foreach (var item in todoItems)
        {
            <li>
                @item.Name 
                @if (item.IsComplete)
                {
                    <span style="padding-left:5px">âœ”</span>
                }
            </li>
        }
    </ul>
}

@code {
    private TodoItem[]? todoItems;
    private PersistingComponentStateSubscription persistingSubscription;

    protected override async Task OnInitializedAsync()
    {
        if (!ApplicationState.TryTakeFromJson<TodoItem[]>(nameof(todoItems), out var restoredData))
        {
            todoItems = await Http.GetTodoItemsAsync();
        }
        else
        {
            todoItems = restoredData!;
        }

        // Call at the end to avoid a potential race condition at app shutdown
        persistingSubscription = ApplicationState.RegisterOnPersisting(PersistData);
    }

    private Task PersistData()
    {
        ApplicationState.PersistAsJson(nameof(todoItems), todoItems);

        return Task.CompletedTask;
    }

    void IDisposable.Dispose() => persistingSubscription.Dispose();
}
