@page "/"
@using Microsoft.Extensions.Http
@inject IHttpClientFactory ClientFactory

<div>
    <h1>Namespace/Member</h1>

    <label for="searchText"></label>
    <input id="searchText" style="width:300px" @bind="searchText" class="form-control" />
    <button type="button" @onclick="GetSearchResults" class="btn btn-default">Search</button>
    <button type="button" class="btn btn-default" onclick="document.getElementById('searchText').value=''">Clear</button>
</div>


<h1>Links</h1>

@if (SearchResultItems?.Results?.Count() > 0)
{
    <ol>
        @foreach (var result in SearchResultItems.Results.Select((x, i) => new { Data = x, Index = i }))
        {
            <li style="margin-bottom:5px">
                <div style="font-size:1.4em;color:green;font-weight:bold">@result.Data.DisplayName</div>
                <div><b>Item Type:</b> @result.Data.ItemType <b>Item Kind:</b> @result.Data.ItemKind</div>
                <div><b>Description:</b> @result.Data.Description</div>

                @if (result.Data.ItemKind == "Constructor")
                {

                    <div><input style="margin-bottom:3px;width:100%" id="m@(result.Index)0" value="[LINK_TEXT](@result.Data.Link)"></div>
                    <div><input style="margin-bottom:3px;width:100%" id="m@(result.Index)1" value="@result.Data.Link"></div>
                    <div>
                        <button type="button" class="btn" onclick=@("copyToClipboard('m" + result.Index + "')0")>Copy (Custom Link Text)</button>
                        <button type="button" class="btn" onclick=@($"copyToClipboard('m" + result.Index + "')1")>Copy (Member Only)</button>
                    </div>
                }
                else
                {
                    <div><input style="margin-bottom:3px;width:100%" id="m@(result.Index)0" value="<xref:@result.Data.Link>"></div>
                    <div><input style="margin-bottom:3px;width:100%" id="m@(result.Index)1" value="<xref:@result.Data.Link?displayProperty=fullName>"></div>
                    <div><input style="margin-bottom:3px;width:100%" id="m@(result.Index)2" value="[LINK_TEXT](xref:@result.Data.Link)"></div>
                    <div><input style="margin-bottom:3px;width:100%" id="m@(result.Index)3" value="xref:@result.Data.Link"></div>
                    <div>
                        <button type="button" class="btn" onclick=@($"copyToClipboard('m" + result.Index + "0')")>Copy</button>
                        <button type="button" class="btn" onclick=@($"copyToClipboard('m" + result.Index + "1')")>Copy (Full Name)</button>
                        <button type="button" class="btn" onclick=@($"copyToClipboard('m" + result.Index + "2')")>Copy (Custom Link Text)</button>
                        <button type="button" class="btn" onclick=@($"copyToClipboard('m" + result.Index + "3')")>Copy (Member Only)</button>
                    </div>
                }
            </li>
        }
    </ol>
}

@message

@code {
    private string? searchText;

    private SearchResults? SearchResultItems { get; set; }

    public string? message;

    public async Task GetSearchResults()
    {
        var client = ClientFactory.CreateClient("APIClient");

        if (searchText == null)
        {
            return;
        }

        SearchResultItems = await client.GetFromJsonAsync<SearchResults>($"api/apibrowser/dotnet/search?api-version=0.2&search={searchText}");

        Console.WriteLine("HERE 1 !!!!!!!!!!!!");

        if (SearchResultItems?.Results != null)
        {
            foreach (var result in SearchResultItems.Results)
            {
                if (result.ItemType == "Constructor")
                {
                    result.Link = "/dotnet/api/" + result?.DisplayName?.Substring(0, result.DisplayName.Length - 2).ToLowerInvariant() + ".-ctor";
                }
                else if (result.ItemType == "Method")
                {
                    message = $"DisplayName: {result.DisplayName} Length: {result.DisplayName?.Length}";

                    result.Link = result?.DisplayName?.Substring(0, result.DisplayName.Length - 2) + "%2A";
                }
                else
                {
                    result.Link = result.DisplayName;
                }
            }
        }
        else
        {
            message = "Request failed.";
        }

        Console.WriteLine("HERE 2 !!!!!!!!!!!!");

        searchText = string.Empty;
        message = string.Empty;

        StateHasChanged();

        Console.WriteLine("HERE 3 !!!!!!!!!!!!");


    }

    public class SearchResults
    {
        public IEnumerable<Result>? Results { get; set; }
    }

    public class Result
    {
        public string? DisplayName { get; set; }
        public string? ItemType { get; set; }
        public string? ItemKind { get; set; }
        public string? Description { get; set; }
        public string? Link { get; set; }
        public string? Id1 { get; set; }
        public string? Id2 { get; set; }
        public string? Id3 { get; set; }
    }
}
